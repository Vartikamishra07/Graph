class Solution 
{
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) 
    {
        int m=mat.size();
        int n=mat[0].size();
        queue<pair<pair<int,int>,int>>q;
        vector<vector<int>>vis(m,vector<int>(n,0));
        vector<vector<int>>dist(m,vector<int>(n,0));
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(mat[i][j]==1)
                {
                    vis[i][j]=1;
                    q.push({{i,j},0});
                }
                else
                {
                    vis[i][j]=0;
                }
            }
        }

        int delrow[]={-1,0,1,0};
        int delcol[]={0,1,0,-1};

        while(!q.empty())
        {
            int row=q.front().first.first;
            int col=q.front().first.second;
            int steps=q.front().second;
            q.pop();
            dist[row][col]=steps;
            
            for(int i=0;i<4;i++)
            {
                int newrow = row+delrow[i];
                int newcol= col+delcol[i];
                if(newrow>=0 && newrow<m && newcol>=0 && newcol<n && vis[newrow][newcol]==0  )
                {
                   vis[newrow][newcol]==1;
                   q.push({{newrow,newcol},steps+1});
                }
            }
        }
        return dist;
    }
};
