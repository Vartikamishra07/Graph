#include <vector>
#include <queue>

using namespace std;

class Solution 
{
public:
    int numEnclaves(vector<vector<int>>& grid) 
    {
        int m = grid.size();
        int n = grid[0].size();
        queue<pair<int,int>> q;
        int vis[m][n];
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                vis[i][j]=0;
            }
        }
        int nr[] = {-1, 0, 1, 0};
        int nc[] = {0, 1, 0, -1};

        for(int i = 0; i < m; i++)
        {
            for(int j = 0; j < n; j++)
            {
                if(i == 0 || i == m-1 || j == 0 || j == n-1)
                {
                    if(grid[i][j] == 1)
                    {
                        q.push({i, j});
                        vis[i][j] = 1;
                    }
                }
            }
        }

        while(!q.empty())
        {
            int row = q.front().first;
            int column = q.front().second;
            q.pop();

            for(int i = 0; i < 4; i++)
            {
                int newrow = row + nr[i];
                int newcol = column + nc[i];
                
                if(newrow >= 0 && newrow < m && newcol >= 0 && newcol < n && grid[newrow][newcol] == 1 && vis[newrow][newcol] == 0)
                {
                    q.push({newrow, newcol});
                    vis[newrow][newcol] = 1;
                }
            }
        }

        int cnt = 0;
        for(int i = 0; i < m; i++)
        {
            for(int j = 0; j < n; j++)
            {
                if(grid[i][j] == 1 && vis[i][j] == 0)
                {
                    cnt++;
                }
            }
        }

        return cnt;
    }
};
